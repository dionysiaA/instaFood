{"version":3,"sources":["../src/routes/socialMediaRoutes.js"],"names":["InstagramAPI","require","instagramAPI","router","get","req","res","next","user","findOneAccessToken","id","then","value","userSelfMedia","medias","console","log","result","data","map","media","images","standard_resolution","url","send","catch","getMediasByTag","tags"],"mappings":";;;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAPA,MAAMA,eAAeC,QAAQ,eAAR,CAArB;AACA,MAAMC,eAAe,IAAIF,YAAJ,CAAiB,qDAAjB,CAArB;;AAQA,MAAMG,SAAS,qBAAf;;AAEAA,OAAOC,GAAP,CAAW,QAAX,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5C,MAAGF,IAAIG,IAAP,EAAa;;AAET,mBAAKC,kBAAL,CAAwBJ,IAAIG,IAAJ,CAASE,EAAjC,EACCC,IADD,CACMH,QAAQ;AACZ,aAAO,IAAIR,YAAJ,CAAiBQ,KAAKI,KAAtB,CAAP;AACD,KAHD,EAIED,IAJF,CAIOT,gBAAgB;AACpB,aAAOA,aAAaW,aAAb,GACJF,IADI,CACCG,UAAU;AACdC,gBAAQC,GAAR,CAAYF,MAAZ,EAAoB,4BAApB;AACA,cAAMG,SAASH,OAAOI,IAAP,CAAYC,GAAZ,CAAiBC,KAAD,IAAW;AACxC,iBAAOA,MAAMC,MAAN,CAAaC,mBAAb,CAAiCC,GAAxC;AACD,SAFc,CAAf;AAGAjB,YAAIkB,IAAJ,CAASP,MAAT;AACD,OAPI,CAAP;AAQD,KAbF,EAcCQ,KAdD,CAcOlB,IAdP;AAeH,GAjBD,MAkBK;AACHD,QAAIkB,IAAJ,CAAS,oBAAT;AACD;AACF,CAtBD;;AAwBArB,OAAOC,GAAP,CAAW,iBAAX,EAA8B,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACrD,MAAGF,IAAIG,IAAP,EAAa;AACX,WAAO,eAAKC,kBAAL,CAAwBJ,IAAIG,IAAJ,CAASE,EAAjC,EACJC,IADI,CACCH,QAAQ;AACZ,aAAO,IAAIR,YAAJ,CAAiBQ,KAAKI,KAAtB,CAAP;AACD,KAHI,EAIJD,IAJI,CAICT,gBAAgB;AACnB;AACA;AACA;AACA;AACD,aAAOA,aAAawB,cAAb,CAA4B,MAA5B,EACJf,IADI,CACCG,UAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,gBAAQC,GAAR,CAAYF,MAAZ,EAAoB,iDAApB;AACAC,gBAAQC,GAAR,CAAa,2EAAb;AACA,cAAMC,SAASH,OAAOI,IAAP,CAAYC,GAAZ,CAAiBC,KAAD,IAAW;AACxCL,kBAAQC,GAAR,CAAYI,KAAZ,EAAmB,wCAAnB;AACA,cAAGA,SAASA,MAAMC,MAAlB,EAA0B;AACxBN,oBAAQC,GAAR,CAAY,wBAAZ,EAAsCI,MAAMC,MAAN,CAAaC,mBAAb,CAAiCC,GAAvE;AACA,mBAAO;AACLA,mBAAKH,MAAMC,MAAN,CAAaC,mBAAb,CAAiCC,GADjC;AAELI,oBAAMP,MAAMO;AAFP,aAAP;AAID;AACF,SATc,CAAf;AAUA,eAAOV,MAAP;AACD,OAzBI,CAAP;AA2BD,KApCI,EAqCJN,IArCI,CAqCEG,MAAD,IAAY;AAChBR,UAAIkB,IAAJ,CAASV,MAAT;AACD,KAvCI,EAwCJW,KAxCI,CAwCElB,IAxCF,CAAP;AAyCD,GA1CD,MA2CK;AACHD,QAAIkB,IAAJ,CAAS,oBAAT;AACD;AACF,CA/CD;kBAgDerB,M","file":"socialMediaRoutes.js","sourcesContent":["const InstagramAPI = require('instagram-api');\nconst instagramAPI = new InstagramAPI('4243299161.9c74f6e.477008a1fab94fe0ab6b3577a13bed39');\n\nimport URL from 'url';\nimport passport from 'passport';\nimport validator from 'validator';\nimport User from '../models/User';\nimport { Router } from 'express';\n\nconst router = new Router();\n\nrouter.get('/media', function(req, res, next) {\n  if(req.user) {\n\n      User.findOneAccessToken(req.user.id)\n      .then(user => {\n        return new InstagramAPI(user.value)\n      })\n       .then(instagramAPI => {\n         return instagramAPI.userSelfMedia()\n           .then(medias => {\n             console.log(medias, 'this is one media in media')\n             const result = medias.data.map((media) => {\n               return media.images.standard_resolution.url\n             })\n             res.send(result)\n           })\n       })\n      .catch(next)\n  }\n  else {\n    res.send('404 user not found')\n  }\n})\n\nrouter.get('/media/foodTags', function(req, res, next) {\n  if(req.user) {\n    return User.findOneAccessToken(req.user.id)\n      .then(user => {\n        return new InstagramAPI(user.value)\n      })\n      .then(instagramAPI => {\n         // return Promise.all([instagramAPI.getMediasByTag('food'),\n         //  instagramAPI.getMediasByTag('foodie'),\n         //  instagramAPI.getMediasByTag('foodporn'),\n         //  instagramAPI.getMediasByTag('ravioli')])\n        return instagramAPI.getMediasByTag('food')\n          .then(medias => {\n            // console.log(medias, 'here are the medias in foodtags')\n            // const mergedArrays = medias.reduce((acc, media) => {\n            //   console.log(media.data, 'media oleeeeeee')\n            //   return [...media.data]\n            // }, [])\n            // const filteredMedias = medias.map( media => {\n            //   if (media.data.length)\n            //     return [...media.data]\n            // })\n\n            console.log(medias, '!!!!!!!!!!!!!!!!!!this is one media in foodTags')\n            console.log( '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!this is one media in foodTags')\n            const result = medias.data.map((media) => {\n              console.log(media, 'here is the url of the picture we want')\n              if(media && media.images) {\n                console.log('UUUUUURRRRRRLLL AAAAAA', media.images.standard_resolution.url)\n                return {\n                  url: media.images.standard_resolution.url,\n                  tags: media.tags\n                }\n              }\n            })\n            return result\n          })\n\n      })\n      .then((medias) => {\n        res.send(medias)\n      })\n      .catch(next)\n  }\n  else {\n    res.send('404 user not found')\n  }\n})\nexport default router;\n"]}