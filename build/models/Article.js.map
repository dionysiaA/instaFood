{"version":3,"sources":["../src/models/Article.js"],"names":["DATA_URI","loader","lastFetchTime","fetchArticles","Date","now","data","then","x","json","msetAsync","reduce","acc","val","idx","length","JSON","stringify","map","i","id","Article","find","keys","keysAsync","mgetAsync","parse","Object","assign","load","Promise","resolve","Error"],"mappings":";;;;;;kQAAA;;;;;;;;;AAWA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,WAAW,+FAAjB;;AAEA,IAAIC,MAAJ;AACA,IAAIC,gBAAgB,CAApB;;AAEA;AACA,eAAeC,aAAf,GAA+B;AAC7BD,kBAAgBE,KAAKC,GAAL,EAAhB;AACA,QAAMC,OAAO,MAAM,yBAAMN,QAAN,EAAgBO,IAAhB,CAAqBC,KAAKA,EAAEC,IAAF,EAA1B,CAAnB;AACA,QAAM,gBAAMC,SAAN,CAAgBJ,KAAKK,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAChC,CAAC,GAAGF,GAAJ,EAAU,YAAWN,KAAKS,MAAL,GAAcD,GAAI,EAAvC,EAA0CE,KAAKC,SAAL,CAAeJ,GAAf,CAA1C,CADoB,EAC4C,EAD5C,CAAhB,CAAN;AAEA,SAAOP,KAAKY,GAAL,CAAS,CAACV,CAAD,EAAIW,CAAJ,gBAAaC,IAAId,KAAKS,MAAL,GAAcI,CAA/B,IAAqCX,CAArC,CAAT,CAAP;AACD;;AAED,MAAMa,OAAN,CAAc;;AAMZ,eAAaC,IAAb,GAAoB;AAClB,UAAMC,OAAO,MAAM,gBAAMC,SAAN,CAAgB,YAAhB,CAAnB;AACA,UAAMlB,OAAOiB,KAAKR,MAAL,GACX,CAAC,MAAM,gBAAMU,SAAN,CAAgBF,IAAhB,CAAP,EAA8BL,GAA9B,CAAkC,CAACV,CAAD,EAAIW,CAAJ,gBAAaC,IAAIG,KAAKJ,CAAL,CAAjB,IAA6BH,KAAKU,KAAL,CAAWlB,CAAX,CAA7B,CAAlC,CADW,GAEV,MAAML,eAFT;;AAIA;AACA,QAAIC,KAAKC,GAAL,KAAaH,aAAb,GAA6B,MAAjC,EAAyCC;;AAEzC,WAAOG,KAAKY,GAAL,CAASV,KAAKmB,OAAOC,MAAP,CAAc,IAAIP,OAAJ,EAAd,EAA6Bb,CAA7B,CAAd,CAAP;AACD;;AAED,SAAOqB,IAAP,CAAYN,IAAZ,EAAkB;AAChB,WAAOtB,OAAO4B,IAAP,CAAYN,IAAZ,CAAP;AACD;AApBW;;AAuBdtB,SAAS,yBAAesB,QAAQO,QAAQC,OAAR,GAC7BxB,IAD6B,CACxB,MAAML,gBAAgB,IAAhB,GAAuBC,eADL,EACsB;AADtB,CAE7BI,IAF6B,CAExB,MAAM,gBAAMkB,SAAN,CAAgBF,KAAKL,GAAL,CAASV,KAAM,YAAWA,CAAE,EAA5B,CAAhB,CAFkB,EAG7BD,IAH6B,CAGxBD,QAAQA,KAAKY,GAAL,CAAS,CAACV,CAAD,EAAIW,CAAJ,KAAU;AAC/B,MAAIX,CAAJ,EAAO,OAAOmB,OAAOC,MAAP,CAAc,IAAIP,OAAJ,EAAd,EAA6Bb,CAA7B,EAAgC,EAAEY,IAAIG,KAAKJ,CAAL,CAAN,EAAhC,CAAP;AACP,QAAM,IAAIa,KAAJ,CAAW,kCAAiCT,KAAKJ,CAAL,CAAQ,EAApD,CAAN;AACD,CAHa,CAHgB,CAAvB,CAAT;;kBAQeE,O","file":"Article.js","sourcesContent":["/**\n * Node.js API Starter Kit (https://reactstarter.com/nodejs)\n *\n * Copyright Â© 2016-present Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport DataLoader from 'dataloader';\nimport fetch from 'node-fetch';\nimport redis from '../redis';\n\nconst DATA_URI = 'https://gist.githubusercontent.com/koistya/a32919e847531320675764e7308b796a/raw/articles.json';\n\nlet loader;\nlet lastFetchTime = 0;\n\n// returns [ { id: 1, title: '...', author: '...', url: '...' }, ... ]\nasync function fetchArticles() {\n  lastFetchTime = Date.now();\n  const data = await fetch(DATA_URI).then(x => x.json());\n  await redis.msetAsync(data.reduce((acc, val, idx) =>\n    [...acc, `articles:${data.length - idx}`, JSON.stringify(val)], []));\n  return data.map((x, i) => ({ id: data.length - i, ...x }));\n}\n\nclass Article {\n  id: number;\n  title: string;\n  author: string;\n  url: string;\n\n  static async find() {\n    const keys = await redis.keysAsync('articles:*');\n    const data = keys.length ?\n      (await redis.mgetAsync(keys)).map((x, i) => ({ id: keys[i], ...JSON.parse(x) })) :\n      (await fetchArticles());\n\n    // Update cache in the background if it's older than 10 minutes\n    if (Date.now() - lastFetchTime > 600000) fetchArticles();\n\n    return data.map(x => Object.assign(new Article(), x));\n  }\n\n  static load(keys) {\n    return loader.load(keys);\n  }\n}\n\nloader = new DataLoader(keys => Promise.resolve()\n  .then(() => lastFetchTime ? null : fetchArticles()) // eslint-disable-line no-confusing-arrow\n  .then(() => redis.mgetAsync(keys.map(x => `articles:${x}`)))\n  .then(data => data.map((x, i) => {\n    if (x) return Object.assign(new Article(), x, { id: keys[i] });\n    throw new Error(`Cannot find an article with ID ${keys[i]}`);\n  })));\n\nexport default Article;\n"]}